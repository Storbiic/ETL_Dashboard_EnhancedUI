
╔════════════════════════════════════════════════════════════════╗
║                                                                ║
║            🚀 ETL DASHBOARD - STARTUP REMINDER                ║
║                                                                ║
╚════════════════════════════════════════════════════════════════╝

┌────────────────────────────────────────────────────────────────┐
│                                                                │
│  ⚠️  IMPORTANT: Run This Command FIRST!                        │
│                                                                │
│     python run_dev.py                                          │
│                                                                │
└────────────────────────────────────────────────────────────────┘

╔════════════════════════════════════════════════════════════════╗
║  WHY?                                                          ║
╚════════════════════════════════════════════════════════════════╝

  The application needs TWO servers running simultaneously:

  1️⃣  FastAPI Backend (Port 8000)
      └─> Handles file uploads, ETL processing
  
  2️⃣  Flask Frontend (Port 5000)
      └─> Serves web interface, proxies to backend


╔════════════════════════════════════════════════════════════════╗
║  WHAT HAPPENS IF BACKEND ISN'T RUNNING?                       ║
╚════════════════════════════════════════════════════════════════╝

  ❌ ERR_CONNECTION_RESET errors
  ❌ "Failed to fetch" in console
  ❌ Upload button doesn't work
  ❌ All API requests fail


╔════════════════════════════════════════════════════════════════╗
║  QUICK START GUIDE                                             ║
╚════════════════════════════════════════════════════════════════╝

  Step 1: Open Terminal
          └─> Command Prompt or PowerShell

  Step 2: Navigate to Project
          └─> cd ETL_Dashboard_EnhancedUI

  Step 3: Start Servers
          └─> python run_dev.py

  Step 4: Wait for Success Message
          ✅ Servers started successfully!
          📊 Frontend: http://127.0.0.1:5000
          🔌 Backend API: http://127.0.0.1:8000

  Step 5: Open Browser
          └─> Visit: http://127.0.0.1:5000


╔════════════════════════════════════════════════════════════════╗
║  TROUBLESHOOTING                                               ║
╚════════════════════════════════════════════════════════════════╝

  Problem: Port already in use
  Fix:     taskkill /F /IM python.exe
           python run_dev.py

  Problem: Upload not working
  Fix:     python health_check.py
           (If fails, run: python run_dev.py)

  Problem: Connection reset errors
  Fix:     Backend is down! Run: python run_dev.py


╔════════════════════════════════════════════════════════════════╗
║  HELPFUL FILES                                                 ║
╚════════════════════════════════════════════════════════════════╝

  📄 START_HERE.bat        → Double-click to auto-start
  📄 README_START.md       → Quick reference guide
  📄 CONNECTIVITY_GUIDE.md → Full troubleshooting
  📄 health_check.py       → Test connectivity


╔════════════════════════════════════════════════════════════════╗
║  REMEMBER                                                      ║
╚════════════════════════════════════════════════════════════════╝

  ✅ ALWAYS run: python run_dev.py
  ✅ KEEP terminal open (don't close it!)
  ✅ CHECK for "Servers started successfully" message
  ✅ VERIFY both ports 5000 and 8000 are running

  ❌ DON'T close the terminal
  ❌ DON'T run only frontend or only backend
  ❌ DON'T ignore connection errors


╔════════════════════════════════════════════════════════════════╗
║  CURRENT STATUS                                                ║
╚════════════════════════════════════════════════════════════════╝

  Check if servers are running by looking for these messages
  in your terminal:

  ✅ INFO: Uvicorn running on http://127.0.0.1:8000
  ✅ Running on http://127.0.0.1:5000

  If you don't see both, run: python run_dev.py


════════════════════════════════════════════════════════════════

           🎯 Quick Command: python run_dev.py

════════════════════════════════════════════════════════════════

